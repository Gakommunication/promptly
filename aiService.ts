import { supabase } from '../lib/supabase';

export interface ChatMessage {
  message: string;
  flowId?: string;
  variables?: Record<string, string>;
  userId: string;
}

export interface ChatResponse {
  response: string;
  usage?: any;
  model?: string;
}

export class AIService {
  static async sendChatMessage(data: ChatMessage): Promise<ChatResponse> {
    try {
      const { data: response, error } = await supabase.functions.invoke('ai-chat', {
        body: data
      });

      if (error) {
        throw new Error(error.message || 'Failed to get AI response');
      }

      if (response.error) {
        throw new Error(response.error);
      }

      return response;
    } catch (error) {
      console.error('Error in AI service:', error);
      throw error;
    }
  }

  static async incrementFlowUsage(flowId: string): Promise<void> {
    try {
      const { error } = await supabase.functions.invoke('increment-flow-usage', {
        body: { flow_id: flowId }
      });

      if (error) {
        console.error('Error incrementing flow usage:', error);
      }
    } catch (error) {
      console.error('Error in incrementFlowUsage:', error);
    }
  }

  // Fallback response for when AI service is not available
  static generateFallbackResponse(message: string, flowName?: string): string {
    if (flowName) {
      return `‚ú® **${flowName}** - Simulation de r√©ponse\n\nVotre demande "${message}" a √©t√© trait√©e avec succ√®s.\n\n**R√©sultat g√©n√©r√© :**\n\nCeci est une r√©ponse simul√©e pour d√©monstration. Dans la version compl√®te, cette r√©ponse serait g√©n√©r√©e par notre IA sp√©cialis√©e selon votre m√©tier et vos besoins sp√©cifiques.\n\n**Fonctionnalit√©s disponibles :**\n‚Ä¢ G√©n√©ration de contenu professionnel\n‚Ä¢ Adaptation au contexte m√©tier\n‚Ä¢ Variables personnalisables\n‚Ä¢ Export et sauvegarde\n\n‚úÖ **Actions :** Copier, Exporter PDF, Sauvegarder`;
    }

    const responses = [
      `Je comprends votre demande concernant "${message}". \n\nüéØ **Analyse :**\nPour cette t√¢che, je recommande d'utiliser un de nos Flows sp√©cialis√©s qui vous permettra d'obtenir un r√©sultat optimis√©.\n\nüöÄ **Suggestion :**\nS√©lectionnez un Flow dans la sidebar ou d√©crivez-moi plus pr√©cis√©ment votre besoin pour que je puisse vous orienter vers la meilleure solution.`,
      
      `Excellente question ! Pour "${message}", voici mon analyse :\n\nüí° **Solutions disponibles :**\n‚Ä¢ Flow sp√©cialis√© de votre biblioth√®que m√©tier\n‚Ä¢ Cr√©ation d'un nouveau Flow personnalis√©\n‚Ä¢ Adaptation d'un mod√®le existant\n\nüé® **Recommandation :**\nJe peux vous aider √† structurer votre demande pour obtenir le meilleur r√©sultat possible.\n\nQuelle approche pr√©f√©rez-vous ?`,
      
      `Parfait ! Je traite votre demande "${message}".\n\n‚ö° **Analyse en cours...**\n\nüìã **Contenu sugg√©r√© :**\nBas√© sur votre demande, je peux vous proposer plusieurs approches adapt√©es √† votre contexte professionnel.\n\n‚ú® **Optimisations :**\n‚Ä¢ Ton professionnel adapt√©\n‚Ä¢ Structure claire et efficace\n‚Ä¢ Personnalisation selon vos besoins\n\nSouhaitez-vous que je d√©veloppe une solution sp√©cifique ?`
    ];

    return responses[Math.floor(Math.random() * responses.length)];
  }
}